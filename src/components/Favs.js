import React, { Component } from "react";import {View, Text, Image, TouchableOpacity, FlatList, Dimensions, BackHandler} from "react-native";import { Container, Content, Icon, Header  ,Item , Input } from 'native-base'import FooterSection from './FooterSection';import Styles from '../../assets/styles'import i18n from '../../local/i18n'import axios from 'axios'import CONST from '../consts';import { DoubleBounce } from 'react-native-loader';import {connect} from "react-redux";import { Permissions, Notifications } from 'expo'import {NavigationEvents} from "react-navigation";import _ from 'lodash'const height = Dimensions.get('window').height;let likesIDs = [];class Favs extends Component {	constructor(props){		super(props);		this.state={			subcategories: [],			search:'',			loader: false,			token: '',			notifyCounter: 0,			likesIDs: _.uniq(likesIDs),			routeName: this.props.navigation.state.routeName,			isRefreshed: false		}	}	async componentWillMount() {		this.setState({ loader: true });		axios.post( CONST.url + 'department/getfavoritDepartment', { lang : (this.props.lang).toUpperCase(), user_id: this.props.user.user_id})			.then(response => {				console.log('my_categoris', response.data.data);				this.setState({ subcategories: response.data.data, loader: false });				// const { subCategories } = this.props.navigation.state.params;				//				// subCategories.map((subCategory) => {				// 	if (subCategory.like){				// 		console.log('chaeck liked', subCategory.like + ' ' + typeof subCategory.like);				// 		likesIDs.push(subCategory.subDepartmentId);				// 	}				// });			});		const { status: existingStatus } = await Permissions.getAsync(			Permissions.NOTIFICATIONS		);		let finalStatus = existingStatus;		if (existingStatus !== 'granted') {			const { status } = await Permissions.askAsync(Permissions.NOTIFICATIONS);			finalStatus = status;		}		if (finalStatus !== 'granted') {			return;		}		let token = await Notifications.getExpoPushTokenAsync();		this.setState({ token });		// alert(token);		//		// console.log('device_id_', token);	}	static navigationOptions = () => ({		drawerLabel: i18n.t('favs') ,		drawerIcon: (<Image source={require('../../assets/images/heart.png')} style={{ height: 20, width: 20 , top:3 }} resizeMode={'contain'} /> )	});	setLike(id){		axios({			url: CONST.url + 'department/favoritDepartment',			method: 'POST',			data: {subDepartmentId: id, user_id: this.props.user.user_id}		}).then(() => this.componentWillMount())	}	_keyExtractor = (item, index) => item.id;	renderItems = (item, id) => {		return(			<TouchableOpacity onPress={() => this.props.navigation.navigate('category', { id: item.subDepartmentId, name: item.subDepartmentName })} style={Styles.categoryList}>				<View style={Styles.homeViewContainer}>					<TouchableOpacity onPress={() => this.setLike(item.subDepartmentId)} style={{ width: 35, height: 35, alignSelf: 'flex-end', position: 'absolute', zIndex: 10, margin: 10, right: 0}}>						<Icon name='heart' type='AntDesign' style={{ color: '#f00' }} />					</TouchableOpacity>					<View style={Styles.homeTextCont}>						<Text style={Styles.homeText}>{item.subDepartmentName}</Text>					</View>					<Image source={{ uri: 'https://' + item.subImage }} resizeMode={'cover'} style={Styles.flatImage}/>				</View>			</TouchableOpacity>		);	};	renderLoader(){		if (this.state.loader){			return(				<View style={{ alignItems: 'center', justifyContent: 'center', height, alignSelf:'center' , backgroundColor:'#fff' , width:'100%'  , position:'absolute' , zIndex:1 }}>					<DoubleBounce size={20} color="#00918B" />				</View>			);		}	}	renderNoData(){		if (this.state.subcategories.length === 0){			return(				<View style={{ justifyContent: 'center', alignItems: 'center', width: '100%' }}>					<Image source={require('../../assets/images/no_data.png')} resizeMode={'contain'} style={{ alignSelf: 'center', width: 200, height: 200, marginTop: 100 }}/>					<Text style={[Styles.tegisterText , {marginTop: 10 , fontSize:16}]}>{ i18n.t('noData') }</Text>				</View>			);		}	}	onFocus(){		this.setState({ subcategories: [] });		this.componentWillMount()	}	render() {		const { subcategories } = this.state;		console.log('subcategories__', subcategories);		return (			<Container style={{}}>				<NavigationEvents onWillFocus={payload => this.onFocus(payload)} />				<Header style={Styles.header} noShadow>					<View style={Styles.headerView}>						<TouchableOpacity onPress={() => this.props.navigation.openDrawer()} style={Styles.headerTouch}>							<Image source={require('../../assets/images/menu.png')} style={[Styles.headerMenu , Styles.transform]} resizeMode={'contain'} />						</TouchableOpacity>						<Text style={Styles.headerBody}>{ i18n.t('favs') }</Text>						<TouchableOpacity onPress={() => this.props.navigation.navigate('home')} style={Styles.headerTouch}>							<Image source={require('../../assets/images/back.png')} style={Styles.headerNoti} resizeMode={'contain'} />							{								this.state.notifyCounter > 0 ? (									<View style={{ backgroundColor: 'red', borderRadius: 30, width: 20, height: 20, alignItems: 'center', justifyContent: 'center', position: 'absolute', right: 25, top: 5 }}>										<Text style={{ color: '#fff' }}>{ this.state.notifyCounter }</Text>									</View>								) : ( <View /> )							}						</TouchableOpacity>					</View>				</Header>				<Content>					{ this.renderNoData() }					{ this.renderLoader() }					<View style={Styles.flatContainer}>						<FlatList							data={subcategories}							renderItem={({item}) => this.renderItems(item)}							numColumns={2}							keyExtractor={this._keyExtractor}						//	extraData={this.state.isRefreshed}						/>					</View>				</Content>			</Container>		);	}}const mapStateToProps = ({ lang, profile, auth }) => {	return {		lang: lang.lang,		user: profile.user,		auth: auth.user,	};};export default connect(mapStateToProps, {})(Favs);