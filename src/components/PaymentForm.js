import React, { Component } from "react";import { View, Text, Image, TouchableOpacity , I18nManager , WebView, Dimensions} from "react-native";import {Container, Content, Icon, Header, Item, Input, Label, Picker, Button, Toast} from 'native-base'import Styles from '../../assets/styles'import i18n from '../../local/i18n'import Modal from "react-native-modal";import axios from "axios";import CONST from "../consts";import {connect} from "react-redux";import {NavigationEvents} from "react-navigation";import {Notifications} from "expo";const height = Dimensions.get('window').height;class PaymentForm extends Component {	constructor(props){		super(props);		this.state={			userBalance: 0,			currency: ''		}	}	static navigationOptions = () => ({		drawerLabel: i18n.t('wallet') ,		drawerIcon: (<Image source={require('../../assets/images/wallet.png')} style={{ height: 20, width: 20 , top:3 }} resizeMode={'contain'} /> )	})	componentWillMount() {		axios.post( CONST.url + 'user/getUserBalance', { lang : (this.props.lang).toUpperCase(), user_id: this.props.user.user_id})			.then(response => {				this.setState({ userBalance: response.data.data.price, currency: response.data.data.currency });			});	}	componentDidMount(){		Notifications.addListener(this.handleNotification);	}	handleNotification = (notification) => {		this.componentWillMount();	};	onFocus(){		this.componentWillMount()	}	_onLoad(state, navigation) {		console.log(state.url);		if (state.url.indexOf('?status=') != -1) {			let status = state.url.split("status=")[1];			status = status.substring(0, 3);			if (status == 200){				Toast.show({					text: i18n.t('successPayment'),					type: "success",					duration: 3000				});			}else{				Toast.show({					text: i18n.t('error'),					type: "danger",					duration: 3000				});			}			return navigation.navigate('reCharge');		}	}	render() {		const { link } = this.props.navigation.state.params;		return (			<Container style={{}}>				<NavigationEvents onWillFocus={() => this.onFocus()} />				<Header style={Styles.header} noShadow>					<View style={Styles.headerView}>						<TouchableOpacity onPress={() => this.props.navigation.navigate('home')} style={Styles.headerTouch}>							<Image source={require('../../assets/images/back.png')} style={[Styles.headerMenu , Styles.transform]} resizeMode={'contain'} />						</TouchableOpacity>						<Text style={[Styles.headerBody , { flex:1, top:-3 , textAlign:'center'}]}>{i18n.t('onlinePayment')}</Text>					</View>				</Header>				<Content contentContainerStyle={{ flexGrow: 1 }} style={{padding:15}}>					<WebView						onNavigationStateChange={(state) => this._onLoad(state, this.props.navigation)}						source	= {{uri: link}}						style	= {style.loginWebView}						domStorageEnabled={true}						startInLoadingState={true}						scalesPageToFit={false}						scrollEnabled={true}						javaScriptEnabled={true}					/>				</Content>			</Container>		);	}}const style = {	container: {		width:'100%',		justifyContent: 'center',		overflow: 'hidden'	},	loginWebView: {		flex   : 1 ,		width  : '100%',		height : '100%'	}};const mapStateToProps = ({ lang, profile  }) => {	return {		lang: lang.lang,		user: profile.user,	};};export default connect(mapStateToProps, {})(PaymentForm);